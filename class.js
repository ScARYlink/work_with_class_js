/**
 * Created by scarylink on 09.08.2017.
 */
/*
 Задачи ООП
 1- Реализуйте класс Worker (Работник), который будет иметь следующие свойства:
 name (имя), surname (фамилия), rate (ставка за день работы), days (количество отработанных дней).
 Также класс должен иметь метод getSalary(), который будет выводить зарплату работника.
 Зарплата - это произведение (умножение) ставки rate на количество отработанных дней days.
*/




/*
 2- Модифицируйте класс Worker из предыдущей задачи следующим образом:
 сделайте все его свойства приватными, а для их чтения сделайте методы-геттеры.
 Наш класс теперь будет работать так:
 (в данном случае не трогайте дескрипторы,
 методы геттеры имеется ввиду отдельные методы которые будут возвращать то или иное значение)
 var worker = new Worker('Иван', 'Иванов', 10, 31);
 console.log(worker.getName()); //выведет 'Иван'
 console.log(worker.getSurname()); //выведет 'Иванов'
 console.log(worker.getRate()); //выведет 10
 console.log(worker.getDays()); //выведет 31
 console.log(worker.getSalary()); //выведет 310 - то есть 10*31

 3- Реализуйте класс MyString, который будет иметь следующие методы: метод reverse(),
 который параметром принимает строку, а возвращает ее в перевернутом виде, метод ucFirst(),
 который параметром принимает строку, а возвращает эту же строку, сделав ее первую букву заглавной и метод ucWords,
 который принимает строку и делает заглавной первую букву каждого слова этой строки.
 Наш класс должен работать так:
 var str = new MyString();

 console.log(str.reverse('abcde')); //выведет 'edcba'
 console.log(str.ucFirst('abcde')); //выведет 'Abcde'
 console.log(str.ucWords('abcde abcde abcde')); //выведет 'Abcde Abcde Abcde'
 Короткие статьи по основам ООП и обьектам в целом ( обязательно прочитать и желательно понять ):
 обьекты
 наследование
 this


 НЕОБЯЗАТЕЛЬНОЕ ЗАДАНИЕ:
 4- Создайте 1-2 новых класса которые отнаследуются от ParentTimer и будут иметь новые свойства или изменят текущие.

 5- Исправьте ошибку - по клику на startBtn запускается интервал и все работает правильно,
 но при повторном клике на неё вызывается новый интервал и скорость таймера возрастает вдвое и т.д.\

 6- Добавьте кнопку резет в новом классе таймера который будет наследоватся от ParentTimer или
 же от ChildTimer(в нем уже реализована кнопка стоп)

 7- Измените верстку более красиво ( на ваш вкус, но чтоб была более приятна для пользователя)
 */